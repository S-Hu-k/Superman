#include<stdio.h>
#include<stdlib.h>
//5位运动员参加了10米台跳水比赛，有人让他们预测比赛结果 
//A选手说：B第二，我第三；
//B选手说：我第二，E第四；
//C选手说：我第一，D第二；
//D选手说：C最后，我第三；
//E选手说：我第四，A第一；
//比赛结束后，每位选手都说对了一半，请编程确定比赛的名次。
//int main()
//{ 
//	int a = 0;
//	int b = 0;
//	int c = 0;	
//	int d = 0;
//	int e = 0;	
//	for (a = 1; a <= 5; a++)
//	{ 
//		for (b = 1; b <= 5; b++)	
//		{ 
//			for (c = 1; c <= 5; c++)	
//			{ 
//				for (d = 1; d <= 5; d++)		
//				{ 
//					for (e = 1; e <= 5; e++)			
//					{ 
//						if (((b == 2) + (a == 3) == 1) && ((b == 2) + (e == 4) == 1) && ((c == 1) + (d == 2) == 1) && ((c == 5) + (d == 3) == 1) && ((e == 4) + (a == 1) == 1))			
//						{
//							if ((a*b*c*d*e == 120) && (a + b + c + d + e == 15))	
//								printf("a=%d,b=%d,c=%d,d=%d,e=%d\n", a, b, c, d, e); 
//						} 
//					} 
//				} 
//			}
//		} 
//	}	
//	system("pause");	
//	return 0; 
//}
//2
//日本某地发生了一件谋杀案，警察通过排查确定杀人凶手必为4个
//嫌疑犯的一个。以下为4个嫌疑犯的供词。
//A说：不是我。
//B说：是C。
//C说：是D。
//D说：C在胡说
//已知3个人说了真话，1个人说的是假话。
//现在请根据这些信息，写一个程序来确定到底谁是凶手。
//int main()
//{
//	int A = 0, B = 0, C = 0, D = 0;
//	int FD;//因为c和d的供词刚好对立 表示对立的	
//	int i;	
//	for(i=1; i<=4; i++)
//	{				
//		if(i==1)//A说的假	
//		{			
//			A=1;C=1;FD=1;D=0;	
//		}		
//		if(i==2)//B说的假	
//		{			
//			A=0;C=0;FD=1;D=0;	
//		}		
//		if(i==3)//C说的假	
//		{		
//			A=0;C=1;FD=0;D=0;	
//		}	
//		if(i==4)//D的说的假	
//		{			
//			A=0;C=1;FD=1;D=0;	
//		}		
//		if(A+B+C+D+FD==1&&FD==D) 		
//			printf("A=%d B=%d C=%d D=%d\n",A,B,C,D); 
//	}	
//	system("pause");
//	return 0;
//}
	

//3.在屏幕上打印杨辉三角。
//1
//1 1
//1 2 1
//1 3 3 1
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int a[100][100];
//	int num = 0;
//	printf("请输入要打印的行数:>");
//	scanf("%d", &num);
//	for (i = 0; i <100; i++)
//	{
//		for (j = 0; j <100; j++)
//		{
//			a[i][j] = 0;
//		}
//	}
//	for (i = 0; i < num; i++)
//    {
//			a[i][0] = 1;
//	}
//	for (i = 1; i < num; i++)
//	{
//		for (j = 1; j < num; j++)
//		{
//			 a[i][j] = a[i - 1][j] + a[i - 1][j - 1];
//		}
//	}
//	for (i = 0; i < num; i++)
//	{
//		for (j = 0; j <=i; j++)
//		{
//			printf("%d", a[i][j]);
//		}
//		printf("\n");
//	}
//	system("pause");
//	return 0;
//}
