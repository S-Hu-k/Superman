1.编写代码模拟三次密码输入的场景。 
最多能输入三次密码，密码正确，提示“登录成功”, 密码错误，
可以重新输入，最多输入三次。三次均错，则提示退出程序。

#include<stdio.h>
#include<math.h>
int main()
{
	int i = 0;
	char password[20] = { 0 };

	
	for (i = 0; i < 3; i++)
	{
		printf("请输入密码：>");
		scanf("%s", password);
		if (strcmp(password, "123456") == 0)
		{
			printf("密码输入正确\n");
				break;
		}
		else
		{
			printf("密码输入错误\n");
		}
		if (i == 3)
		{
			printf("三次均输入错误，退出程序\n");
		}
	}

	system("pause");
	return 0;
 2. 写代码可以在整型有序数组中查找想要的数字， 
找到了返回下标，找不到返回 - 1.（折半查找）
#include<stdio.h>
int main()
{
	char arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int left = 0;
	int right = sizeof(arr) / sizeof(arr[0]) - 1;
	
	int i =8;
	while (right >= left)
	{
		int mid = (left + right) / 2;
		if (arr[mid] > i)
		{
			right = mid - 1;
		}
		if (arr[mid] < i)
		{
			left = mid + 1;
		}
		else
		{
				printf("%d\n", mid);
				break;
		}
	}
	while (left>right)
	{
		printf("%d\n", -1);
		break;
	}
	system("pause");
	return 0;
3.写一个猜数字游戏
#include<stdio.h>
void menu()
{
	printf("################################\n");
	printf("######  1.进入游戏       #######\n");
	printf("#####   0.退出游戏       #######\n");
	printf("################################\n");
}

#include<time.h>
void game()
{
	int ret = 0;
	int num = 0;
	ret = rand();
	while (1)
	{
		printf("请输入要猜的数字：>");
		scanf("%d", &num);
		if (num > ret)
		{
			printf("猜大了\n");
		}
		else if (num < ret)
		{
			printf("猜小了\n");
		}
		else
		{
			printf("猜对了\n");
			break;
		}
	}
}
int main()
{
    int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请选择:>");
		scanf("%d",&input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
	   default:
				printf("请重新选择\n");
				break;
		}
	} while (input);

   system("pause");
	return 0;

}
